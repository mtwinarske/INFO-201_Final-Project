geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "darkgreen", high = "lightgreen")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "darkblue", high = "lightblue")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "goldenrod", high = "gold")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "darkorange", high = "gold")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "darkorange", high = "yellow")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray48", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat, color = "white")) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat, color = "red")) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat, color = "orange")) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.)) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat, fill = "blue")) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 1, lwd = 0.25) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 2, lwd = 0.25) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 1, lwd = 0.5) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_df) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 1, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
write_csv("king_tracts_sf.csv")
king_tracts_df <- as.data.frame(king_tracts_sf)
my_sf <- st_as_sf(king_tracts_df, coords = c("lon", "lat"), crs = 4326)
my_sf <- st_as_sf(king_tracts_df, coords = c("Long", "Lat"), crs = 4326)
View(king_tracts_df)
st_write(king_tracts_sf, "king_county_tracts.geojson")
map_sf<- st_read("king_county_tracts.geojson")
View(map_sf)
View(king_tracts_sf)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
# adjusting the data
map_sf$GEOID <- paste0("1400000US", map_sf$GEOID)
st_write(map_df, "king_county_tracts.geojson")
st_write(map_df, "king_county_tracts.geojson")
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_sf<- st_read("king_county_tracts.geojson")
# Join data
map_joined_info <- left_join(map_sf, IncomeTransit_df, by = "GEOID")
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 1, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
View(map_joined_info)
map_sf<- st_read("king_county_tracts.geojson")
census_api_key("5adc81c9c101a3cbe6db02d12867966425f6e5cf", install = TRUE, overwrite = TRUE)
get_king_county_tracts <- function() {
census_api_key("your_api_key_here", overwrite = TRUE, install = TRUE)
# Fetch Census tract data for King County
king_county_tracts <- get_acs(
geography = "tract",
variables = c('B01003_001'),
state = "WA",
county = "King",
geometry = TRUE,
year = 2020
)
return(king_county_tracts)
}
king_tracts_sf <- get_king_county_tracts()
king_tracts_sf$GEOID <- paste0("1400000US", king_tracts_sf$GEOID)
st_write(king_tracts_sf, "king_county_tracts.geojson")
map_sf<- st_read("king_county_tracts.geojson")
library(tidycensus)
library(sf)
library(tidyverse)
library(viridis)
library(ggplot2)
library(plot)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_joined_info <- left_join(map_sf, IncomeTransit_df, by = "GEOID")
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 1, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
# Calculate the actual minimum and maximum values of transit users
min_users <- min(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
max_users <- max(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "gray30", high = "gray90")
# Display the map
plot(TransitCenter_map)
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitCenter_map)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
# Calculate the actual minimum and maximum values of transit users
min_users <- min(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
max_users <- max(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
# Create the map
TransitCenter_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitCenter_map)
# Carpool Map
Carpool_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Car.truck.or.van.households.carpooled.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Income Bracket Map
IncomeBracket_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = incomeBracket), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitCenter_map)
plot(IncomeBracket_map)
plot(Carpool_map)
# Display the map
plot(TransitCenter_map)
# Income Bracket Map
IncomeBracket_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = median_income), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
plot(IncomeBracket_map)
# Display the map
plot(TransitUsage_map)
# Transit Map
TransitUsage_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitUsage_map)
plot(IncomeBracket_map)
plot(Carpool_map)
plot(IncomeBracket_map)
# Income Bracket Map
IncomeBracket_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = median_income), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "purple", high = "yellow")
plot(IncomeBracket_map)
# Display the map
plot(TransitUsage_map)
plot(IncomeBracket_map)
# Income Bracket Map
IncomeBracket_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = median_income), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitUsage_map)
plot(IncomeBracket_map)
plot(Carpool_map)
setwd("~/Desktop/GitHub/INFO-201_Final-Project/INFO201_Shiny_Files")
setwd("/Users/miles/Desktop/GitHub/INFO-201_Final-Project/INFO201_Shiny_Files")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
View(IncomeTransit_df)
View(TransitCenter_df)
library(tidycensus)
library(sf)
library(tidyverse)
library(ggplot2)
library(plot)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_transit_joined <- full_join(map_info, TransitCenter_df, by )
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
# Calculate the actual minimum and maximum values of transit users
min_users <- min(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
max_users <- max(map_df$Estimate.Public.Transportation.Users., na.rm = TRUE)
# Transit Map
TransitUsage_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Carpool Map
Carpool_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Car.truck.or.van.households.carpooled.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Income Bracket Map
IncomeBracket_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = median_income), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitUsage_map)
plot(IncomeBracket_map)
View(IncomeTransit_df)
View(map_info)
map_joined_info <- full_join(map_info, IncomeTransit_df, by = "GEOID")
View(map_joined_info)
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
View(map_info)
View(map_joined_info)
View(map_joined_info)
view(map_joined_info)
output$map_plot_if <- renderPlotly({
if (input$chart_type == "Total Household Carpools") {
plot_data <- data[, c(23)]
} else if (input$chart_type == "Total Transit Trips per Household") {
plot_data <- data[, c(34)]
} else if (input$chart_type == "Median Income by GEOID") {
plot_data <- data[, c(6)]
}
})
library(plotly)
library(tidycensus)
library(sf)
library(tidyverse)
library(ggplot2)
library(plotly)
output$map_plot_if <- renderPlotly({
if (input$chart_type == "Total Household Carpools") {
plot_data <- data[, c(23)]
} else if (input$chart_type == "Total Transit Trips per Household") {
plot_data <- data[, c(34)]
} else if (input$chart_type == "Median Income by GEOID") {
plot_data <- data[, c(6)]
}
})
library(shiny)
# Display the map
plot(TransitUsage_map)
plot(Carpool_map)
map_info <- st_read("king_county_tracts.geojson")
View(IncomeTransit_df)
View(IncomeTransit_df)
map_data <- st_read("2020CensusTracts.geojson")
map_joined_data <- left_join("map_data", "IncomeTransit_df", by = "GEOID")
map_info <- st_read("king_county_tracts.geojson")
map_data <- st_read("2020CensusTracts.geojson")
map_data$GEOID <- paste0("1400000US", map_data$GEOID)
map_joined_info <- left_join(map_info, IncomeTransit_df, by = "GEOID")
View(map_joined_info)
# Transit Map
TransitUsage_map <- ggplot(map_joined_info) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitUsage_map)
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_data$GEOID <- paste0("1400000US", map_data$GEOID)
map_joined_data <- left_join("map_data", "IncomeTransit_df", by = "GEOID")
st_write(map_data, "king_county_tracts.geojson")
map_sf<- st_read("king_county_tracts.geojson")
map_sf<- st_read("king_county_tracts.geojson")
map_sf<- st_read("king_county_tracts.geojson")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_data", "IncomeTransit_df", by = "GEOID")
st_write(map_joined_data, "king_county_tracts.geojson")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_data", "IncomeTransit_df", by = "GEOID")
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
# file to find, and write a geojson file for mapmaking in INFO: 201 final project
# Group BF-5: Angel, Rose, Miles
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
View(map_unjoined_data)
View(IncomeTransit_df)
View(IncomeTransit_df)
# file to find, and write a geojson file for mapmaking in INFO: 201 final project
# Group BF-5: Angel, Rose, Miles
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join("map_unjoined_data", "IncomeTransit_df", by = "GEOID")
map_data <- st_read("2020CensusTracts.geojson")
map_data$GEOID <- paste0("1400000US", map_data$GEOID)
map_joined_data <- left_join("map_data", "IncomeTransit_df", by = "GEOID")
map_joined_data <- inner_join("map_data", "IncomeTransit_df", by = "GEOID")
map_joined_data <- full_join("map_data", "IncomeTransit_df", by = "GEOID")
library(tidycensus)
library(sf)
library(tidyverse)
library(ggplot2)
library(plotly)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_info <- st_read("king_county_tracts.geojson")
map_transit_joined <- full_join(map_info, TransitCenter_df, by )
map_data <- st_read("2020CensusTracts.geojson")
map_data$GEOID <- paste0("1400000US", map_data$GEOID)
map_joined_data <- full_join("map_data", "IncomeTransit_df", by = "GEOID")
setwd("~/Desktop/GitHub/INFO-201_Final-Project/INFO201_Shiny_Files")
# file to find, and write a geojson file for mapmaking in INFO: 201 final project
# Group BF-5: Angel, Rose, Miles
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <- left_join(map_unjoined_data, IncomeTransit_df, by = "GEOID")
st_write(map_joined_data, "king_county_tracts.geojson")
map_data<- st_read("king_county_tracts.geojson")
View(map_data)
View(map_data)
library(tidycensus)
library(sf)
library(tidyverse)
library(ggplot2)
library(plotly)
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_data <- st_read("King_county_tracts.geojson")
# Transit Map
TransitUsage_map <- ggplot(map_data) +
geom_sf(aes(fill = Estimate.Public.Transportation.Users.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Carpool Map
Carpool_map <- ggplot(map_data) +
geom_sf(aes(fill = Estimate.Car.truck.or.van.households.carpooled.), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Income Bracket Map
IncomeBracket_map <- ggplot(map_data) +
geom_sf(aes(fill = median_income), linetype = 0.5, lwd = 1) +
geom_point(data = TransitCenter_df, aes(x = Long, y = Lat)) +
coord_sf() +
scale_fill_gradient(low = "blue", high = "yellow")
# Display the map
plot(TransitUsage_map)
plot(IncomeBracket_map)
plot(Carpool_map)
View(map_data)
map_joined_data <-  full_join(map_unjoined_data, IncomeTransit_df, by = "GEOID")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <-  full_join(map_unjoined_data, IncomeTransit_df, by = "GEOID")
View(map_data)
View(map_joined_data)
map_joined_data <-  left_join( IncomeTransit_df, map_unjoined_data, by = "GEOID")
View(map_joined_data)
map_joined_data <-  full_join( IncomeTransit_df, map_unjoined_data, by = "GEOID")
View(map_joined_data)
View(map_unjoined_data)
# file to find, and write a geojson file for mapmaking in INFO: 201 final project
# Group BF-5: Angel, Rose, Miles
TransitCenter_df <- read_csv("TransitCenterLocations.csv")
IncomeTransit_df <- read.csv("IncomeTransitAlt.csv")
map_unjoined_data <- st_read("2020CensusTracts.geojson")
map_unjoined_data$GEOID <- paste0("1400000US", map_unjoined_data$GEOID)
map_joined_data <-  full_join( IncomeTransit_df, map_unjoined_data, by = "GEOID")
View(map_joined_data)
map_joined_data <-  left_join( IncomeTransit_df, map_unjoined_data, by = "GEOID")
View(map_joined_data)
st_write(map_joined_data, "king_county_tracts.geojson")
map_data<- st_read("king_county_tracts.geojson")
View(map_data)
View(map_data)
